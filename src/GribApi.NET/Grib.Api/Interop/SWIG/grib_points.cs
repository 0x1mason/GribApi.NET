/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Grib.Api.Interop.SWIG {

public class grib_points : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal grib_points(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(grib_points obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~grib_points() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          GribApiProxyPINVOKE.delete_grib_points(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_grib_context context {
    set {
      GribApiProxyPINVOKE.grib_points_context_set(swigCPtr, SWIGTYPE_p_grib_context.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_context_get(swigCPtr);
      SWIGTYPE_p_grib_context ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_grib_context(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_double latitudes {
    set {
      GribApiProxyPINVOKE.grib_points_latitudes_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_latitudes_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_double longitudes {
    set {
      GribApiProxyPINVOKE.grib_points_longitudes_set(swigCPtr, SWIGTYPE_p_double.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_longitudes_get(swigCPtr);
      SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_size_t indexes {
    set {
      GribApiProxyPINVOKE.grib_points_indexes_set(swigCPtr, SWIGTYPE_p_size_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_indexes_get(swigCPtr);
      SWIGTYPE_p_size_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_size_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_size_t group_start {
    set {
      GribApiProxyPINVOKE.grib_points_group_start_set(swigCPtr, SWIGTYPE_p_size_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_group_start_get(swigCPtr);
      SWIGTYPE_p_size_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_size_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_size_t group_len {
    set {
      GribApiProxyPINVOKE.grib_points_group_len_set(swigCPtr, SWIGTYPE_p_size_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = GribApiProxyPINVOKE.grib_points_group_len_get(swigCPtr);
      SWIGTYPE_p_size_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_size_t(cPtr, false);
      return ret;
    } 
  }

  public uint n_groups {
    set {
      GribApiProxyPINVOKE.grib_points_n_groups_set(swigCPtr, value);
    } 
    get {
      uint ret = GribApiProxyPINVOKE.grib_points_n_groups_get(swigCPtr);
      return ret;
    } 
  }

  public uint n {
    set {
      GribApiProxyPINVOKE.grib_points_n_set(swigCPtr, value);
    } 
    get {
      uint ret = GribApiProxyPINVOKE.grib_points_n_get(swigCPtr);
      return ret;
    } 
  }

  public uint size {
    set {
      GribApiProxyPINVOKE.grib_points_size_set(swigCPtr, value);
    } 
    get {
      uint ret = GribApiProxyPINVOKE.grib_points_size_get(swigCPtr);
      return ret;
    } 
  }

  public grib_points() : this(GribApiProxyPINVOKE.new_grib_points(), true) {
  }

}

}
